package hotp

import (
	"bytes"
	"testing"
)

func TestComputeDynamicTruncation(t *testing.T) {
	input := []byte{0x1f, 0x86, 0x98, 0x69, 0x0e, 0x02, 0xca, 0x16, 0x61, 0x85, 0x50, 0xef, 0x7f, 0x19, 0xda, 0x8e, 0x94, 0x5b, 0x55, 0x5a}

	result := computeDynamicTruncation(input, 6)

	if result != 872921 {
		t.Fatal("incorrect DynamicTruncation: ", result)
	}
}

func TestComputeTruncatedBytes(t *testing.T) {
	input := []byte{0x1f, 0x86, 0x98, 0x69, 0x0e, 0x02, 0xca, 0x16, 0x61, 0x85, 0x50, 0xef, 0x7f, 0x19, 0xda, 0x8e, 0x94, 0x5b, 0x55, 0x5a}

	result := computeTruncatedBytes(input)

	if !bytes.Equal(result, []byte{0x50, 0xef, 0x7f, 0x19}) {
		t.Fatal("Truncated Bytes are incorrect: ", result)
	}
}

func TestComputeReduction(t *testing.T) {
	input := []byte{0x50, 0xef, 0x7f, 0x19}

	result := computeReduction(input, 6)

	if result != 872921 {
		t.Fatal("incorrect Reduction: ", result)
	}
}
